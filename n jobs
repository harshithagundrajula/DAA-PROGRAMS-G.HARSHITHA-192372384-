from bisect import bisect_right 
def jobScheduling(startTime, endTime, profit): 
# Combine start time, end time, and profit into a single list of jobs 
jobs = sorted(zip(startTime, endTime, profit), key=lambda x: x[1]) 
dp = [0] * len(jobs)    
start = [job[0] for job in jobs] 
end = [job[1] for job in jobs] 
profit = [job[2] for job in jobs]     
dp[0] = profit[0]  
for i in range(1, len(jobs)): 
last_non_conflicting = bisect_right(end, start[i]) - 1         
include_profit = profit[i] 
if last_non_conflicting != -1: 
include_profit += dp[last_non_conflicting] 
dp[i] = max(dp[i-1], include_profit)     
return dp[-1] 
startTime = [1, 2, 3, 3] 
endTime = [3, 4, 5, 6] 
profit = [50, 10, 40, 70] 
result = jobScheduling(startTime, endTime, profit) 
print(f"The maximum profit is: {result}")
