def min_assembly_time(n, a1, a2, t1, t2, e1, e2, x1, x2): 
dp1 = [0] * n  # Time to reach station i on line 1 
dp2 = [0] * n  # Time to reach station i on line 2 
dp1[0] = e1 + a1[0]  # Time to reach station 1 on line 1 
dp2[0] = e2 + a2[0]  # Time to reach station 1 on line 2 
for i in range(1, n): 
dp1[i] = min(dp1[i - 1] + a1[i], dp2[i - 1] + t2[i - 1] + a1[i]) 
dp2[i] = min(dp2[i - 1] + a2[i], dp1[i - 1] + t1[i - 1] + a2[i]) 
min_time = min(dp1[n - 1] + x1, dp2[n - 1] + x2) 
return min_time 
n = 4   
a1 = [7, 9, 3, 4]   
a2 = [8, 5, 6, 4]   
t1 = [2, 3, 1]      
t2 = [2, 1, 2]      
e1 =  
e2 = 4              
x1 = 3              
x2 = 2              
result = min_assembly_time(n, a1, a2, t1, t2, e1, e2, x1, x2) 
print(f"The minimum time required to process the product: {result}")
